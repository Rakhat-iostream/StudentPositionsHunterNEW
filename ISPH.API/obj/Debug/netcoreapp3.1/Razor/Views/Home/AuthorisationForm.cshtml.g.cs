#pragma checksum "C:\Users\Rakhat\source\repos\StudentPositionsHunterNEW\ISPH.API\Views\Home\AuthorisationForm.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9945e28f6740b1e1d92d732631f9fa67818fa89f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_AuthorisationForm), @"mvc.1.0.razor-page", @"/Views/Home/AuthorisationForm.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9945e28f6740b1e1d92d732631f9fa67818fa89f", @"/Views/Home/AuthorisationForm.cshtml")]
    public class Views_Home_AuthorisationForm : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<style>
  #authorisation .form-model .input-container i{
      background-color: mediumspringgreen;
  }
   #authorisation .container input:checked ~ .checkmark {
        background-color: mediumspringgreen;
    }
</style>
<div id=""loginModal"" class=""modal"">

    <!-- Modal content -->
    <div class=""modal-content"">
        <span class=""closeauth"">&times;</span>

        <form id=""authorisation"" method=""post"" onsubmit=""LoginUser();"">
            <h1 style=""text-align: center;"">Sign in</h1>
            <label class=""container"">

                <input name=""authuser"" value=""employer"" type=""radio"">
                <span class=""checkmark""></span>
                Employer
            </label>
            <label class=""container"">
                <input name=""authuser"" value=""student"" type=""radio"" checked>
                <span class=""checkmark""></span>
                Student
            </label>

            <hr />
            <h4 id=""autherror"" style=""color: crimson; text-align: cen");
            WriteLiteral(@"ter; font-weight: normal;""></h4>
            <div class=""form-model"" style=""margin-top: 30px;"">

                <div class=""input-container"">
                    <i class=""fa fa-envelope icon""></i>
                    <input class=""input-field"" type=""email"" placeholder=""Enter your email..."" id=""AuthEmail"">
                </div>

                <div class=""input-container"">
                    <i class=""fa fa-key icon""></i>
                    <input class=""input-field"" type=""password"" placeholder=""Enter your password..."" id=""AuthPassword"">
                </div>

                <button type=""submit"" class=""btn"" style=""background-color: mediumspringgreen;"">Login</button>
            </div>
        </form>
    </div>
</div>
<script>
    var loginmodal = document.getElementById(""loginModal"");
    var loginbtn = document.getElementById(""loginBtn"");
    var loginspan = document.getElementsByClassName(""closeauth"")[0];
    loginbtn.onclick = function () {
        loginmodal.style.display =");
            WriteLiteral(@" ""block"";
    }
    loginspan.onclick = function () {
        loginmodal.style.display = ""none"";
    }
    window.onclick = function (event) {
        if (event.target == loginmodal) {
            loginmodal.style.display = ""none"";
        }
    }
    $('#authorisation').submit(function (e) {
        let user = {
            Email: $('#AuthEmail').val(),
            Password: $('#AuthPassword').val()
        };
        let authurl = """";
        let role = $('input[name=""authuser""]:checked').val();
        if (role === 'employer') {
            authurl = ""users/employers/auth/login"";
        } else {
            authurl = ""users/students/auth/login"";
        }
        e.preventDefault();
        $.ajax({
            type: ""POST"",
            async: false,
            url: ""/"" + authurl,
            data: JSON.stringify(user),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (response) {
                window.");
            WriteLiteral(@"location.reload();
            },
            error: function (response) {
                if (response.status === 400) {
                    $('#autherror').html(""Fill all fields"");
                } else if (response.status == 401) {
                    $('#autherror').html(""Username or password is incorrect"");
                }
            }
        });
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Views_Home_AuthorisationForm> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Views_Home_AuthorisationForm> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Views_Home_AuthorisationForm>)PageContext?.ViewData;
        public Views_Home_AuthorisationForm Model => ViewData.Model;
    }
}
#pragma warning restore 1591
